{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nstartButton.disabled = true;\nlet countdownInterval;\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  dateFormat: 'Y-m-d H:i',\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  enableSeconds: false,\n\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate > currentDate) {\n      startButton.disabled = false;\n    } else {\n      startButton.disabled = true;\n      window.alert('Please choose a date in the future');\n    }\n  },\n});\n\nstartButton.addEventListener('click', function () {\n  if (!startButton.disabled) {\n    startTimer();\n    startButton.disabled = true;\n    dateTimePicker.disabled = true;\n  }\n});\nfunction startTimer() {\n  countdownInterval = setInterval(updateTimer, 1000);\n}\n\nfunction updateTimer() {\n  const currentDate = new Date();\n  const difference = userSelectedDate - currentDate;\n\n  if (difference <= 0) {\n    clearInterval(countdownInterval);\n    return;\n  }\n  const { days, hours, minutes, seconds } = convertMs(difference);\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(difference) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(difference / day);\n  // Remaining hours\n  const hours = Math.floor((difference % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((difference % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((difference % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","countdownInterval","flatpickr","selectedDates","currentDate","startTimer","updateTimer","difference","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"0xBAGA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EACJL,EAAY,SAAW,GACvB,IAAIM,EAEJC,EAAUR,EAAgB,CACxB,WAAY,GACZ,WAAY,YACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,cAAe,GAEf,QAAQS,EAAe,CACrBH,EAAmBG,EAAc,GACjC,MAAMC,EAAc,IAAI,KACpBJ,EAAmBI,EACrBT,EAAY,SAAW,IAEvBA,EAAY,SAAW,GACvB,OAAO,MAAM,oCAAoC,EAEpD,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAAS,UAAY,CAC3CA,EAAY,WACfU,IACAV,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE9B,CAAC,EACD,SAASW,GAAa,CACpBJ,EAAoB,YAAYK,EAAa,GAAI,CACnD,CAEA,SAASA,GAAc,CACrB,MAAMF,EAAc,IAAI,KAClBG,EAAaP,EAAmBI,EAEtC,GAAIG,GAAc,EAAG,CACnB,cAAcN,CAAiB,EAC/B,MACD,CACD,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAU,EAC9DX,EAAY,YAAciB,EAAeL,CAAI,EAC7CX,EAAa,YAAcgB,EAAeJ,CAAK,EAC/CX,EAAe,YAAce,EAAeH,CAAO,EACnDX,EAAe,YAAcc,EAAeF,CAAO,CACrD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASF,EAAUL,EAAY,CAO7B,MAAMC,EAAO,KAAK,MAAMD,EAAa,KAAG,EAElCE,EAAQ,KAAK,MAAOF,EAAa,MAAO,IAAI,EAE5CG,EAAU,KAAK,MAAQH,EAAa,MAAO,KAAQ,GAAM,EAEzDI,EAAU,KAAK,MAASJ,EAAa,MAAO,KAAQ,IAAU,GAAM,EAE1E,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}